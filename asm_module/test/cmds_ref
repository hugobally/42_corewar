.name "toto"
.comment "toto"

## live
#l1:

#live DIR
#live DIR_LAB

## load

#l2:

#ld DIR, REG
#ld DIR_LAB, REG
#
#ld IND, REG
#ld IND_LAB, REG

## store

#l3:

#st REG, REG
#
#st REG, IND
#st REG, IND_LAB

## add / sub

#l4:

#add REG, REG, REG
#sub REG, REG, REG

#l5:
## and
#
#and DIR, REG, REG
#and DIR_LAB, REG, REG
#
#and IND, REG, REG
#and IND_LAB, REG, REG
#
#and REG, DIR, REG
#and REG, DIR_LAB, REG
#
#and REG, IND, REG
#and REG, IND_LAB, REG
#
## or
#
#or DIR, REG, REG
#or DIR_LAB, REG, REG
#
#or IND, REG, REG
#or IND_LAB, REG, REG
#
#or REG, DIR, REG
#or REG, DIR_LAB, REG
#
#or REG, IND, REG
#or REG, IND_LAB, REG
#
## xor
#
#xor DIR, REG, REG
#xor DIR_LAB, REG, REG
#
#xor IND, REG, REG
#xor IND_LAB, REG, REG
#
#xor REG, DIR, REG
#xor REG, DIR_LAB, REG
#
#xor REG, IND, REG
#xor REG, IND_LAB, REG

## zjump

#l6:

#zjmp DIR
#zjmp DIR_LAB

## load index

#l7:

#ldi DIR, REG, REG
#ldi DIR_LAB, REG, REG
#
#ldi REG, DIR, REG
#ldi REG, DIR_LAB, REG
#
#ldi IND, REG, REG
#ldi IND_LAB, REG, REG

## store index

#l8:

#sti REG, REG, REG
#
#sti REG, DIR, REG
#sti REG, DIR_LAB, REG
#
#sti REG, REG, DIR
#sti REG, REG, DIR_LAB
#
#sti REG, IND, REG
#sti REG, IND_LAB, REG

## fork

#l9:

#fork DIR
#fork DIR_LAB

## long load

#l10:

#lld DIR, REG
#lld DIR_LAB, REG
#
#lld IND, REG
#lld IND_LAB, REG

## long load index

#l11:

#lldi DIR, REG, REG
#lldi DIR_LAB, REG, REG
#
#lldi IND, REG, REG
#lldi IND_LAB, REG, REG
#
#lldi REG, DIR, REG
#lldi REG, DIR_LAB, REG

## long fork

#l12:

#lfork DIR
#lfork DIR_LAB

## aff

#l13:
#
#aff REG

#end:
